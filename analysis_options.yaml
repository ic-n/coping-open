# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    prefer_single_quotes: true
    discarded_futures: true
    invalid_case_patterns: true
    always_use_package_imports: true
    avoid_dynamic_calls: true
    avoid_type_to_string: true
    close_sinks: true
    cancel_subscriptions: true
    throw_in_finally: true
    unnecessary_statements: true
    always_declare_return_types: true
    always_put_control_body_on_new_line: false
    always_put_required_named_parameters_first: true
    always_specify_types: false
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_positional_boolean_parameters: true
    avoid_redundant_argument_values: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_unused_constructor_parameters: true
    cast_nullable_to_non_nullable: true
    combinators_ordering: true
    directives_ordering: true
    eol_at_end_of_file: true
    flutter_style_todos: true
    join_return_with_assignment: true
    matching_super_parameters: true
    no_default_cases: true
    no_runtimeType_toString: true
    noop_primitive_operations: true
    only_throw_errors: true
    prefer_expression_function_bodies: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_final_parameters: true
    prefer_mixin: true
    prefer_null_aware_method_calls: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_breaks: true
    unnecessary_lambdas: true
    unnecessary_null_checks: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_to_list_in_spreads: true
    unreachable_from_main: true
    use_enums: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_named_constants: true
    use_raw_strings: true
    use_string_buffers: true
    use_to_and_as_if_applicable: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
